/* tslint:disable */
/* eslint-disable */
/**
 * Justina Io
 * OpenApi documentaciÃ³n para app de justina
 *
 * The version of the OpenAPI document: 1.0
 * Contact: justina@ejemplo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PacienteRequest
 */
export interface PacienteRequest {
    /**
     * 
     * @type {string}
     * @memberof PacienteRequest
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof PacienteRequest
     */
    password?: string;
    /**
     * 
     * @type {number}
     * @memberof PacienteRequest
     */
    idPaciente?: number;
    /**
     * 
     * @type {string}
     * @memberof PacienteRequest
     */
    nombre?: string;
    /**
     * 
     * @type {string}
     * @memberof PacienteRequest
     */
    apellido?: string;
    /**
     * 
     * @type {number}
     * @memberof PacienteRequest
     */
    idTipoDocumento?: number;
    /**
     * 
     * @type {number}
     * @memberof PacienteRequest
     */
    numeroDocumento?: number;
    /**
     * 
     * @type {Date}
     * @memberof PacienteRequest
     */
    fechaNacimiento?: Date;
    /**
     * 
     * @type {number}
     * @memberof PacienteRequest
     */
    genero?: number;
    /**
     * 
     * @type {number}
     * @memberof PacienteRequest
     */
    factorSanguineo?: number;
}

/**
 * Check if a given object implements the PacienteRequest interface.
 */
export function instanceOfPacienteRequest(value: object): value is PacienteRequest {
    return true;
}

export function PacienteRequestFromJSON(json: any): PacienteRequest {
    return PacienteRequestFromJSONTyped(json, false);
}

export function PacienteRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PacienteRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'] == null ? undefined : json['email'],
        'password': json['password'] == null ? undefined : json['password'],
        'idPaciente': json['idPaciente'] == null ? undefined : json['idPaciente'],
        'nombre': json['nombre'] == null ? undefined : json['nombre'],
        'apellido': json['apellido'] == null ? undefined : json['apellido'],
        'idTipoDocumento': json['idTipoDocumento'] == null ? undefined : json['idTipoDocumento'],
        'numeroDocumento': json['numeroDocumento'] == null ? undefined : json['numeroDocumento'],
        'fechaNacimiento': json['fechaNacimiento'] == null ? undefined : (new Date(json['fechaNacimiento'])),
        'genero': json['genero'] == null ? undefined : json['genero'],
        'factorSanguineo': json['factorSanguineo'] == null ? undefined : json['factorSanguineo'],
    };
}

export function PacienteRequestToJSON(value?: PacienteRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'email': value['email'],
        'password': value['password'],
        'idPaciente': value['idPaciente'],
        'nombre': value['nombre'],
        'apellido': value['apellido'],
        'idTipoDocumento': value['idTipoDocumento'],
        'numeroDocumento': value['numeroDocumento'],
        'fechaNacimiento': value['fechaNacimiento'] == null ? undefined : ((value['fechaNacimiento']).toISOString().substring(0,10)),
        'genero': value['genero'],
        'factorSanguineo': value['factorSanguineo'],
    };
}

